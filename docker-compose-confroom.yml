version: '2'
services:

  db:
    image: mariadb:latest
    container_name: db
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: m4ru5ja
      MYSQL_DATABASE: &mysqldb tine20
      MYSQL_USER: &mysqluser tine20
      MYSQL_PASSWORD: &mysqlpw tine20pw

  # link confroom dir into this dir like this:
  #    $ ln -s /data/workspace/conference_room confroom
  # start docker:
  #    $ docker-compose -f docker-compose-confroom.yml up
  confroom:
    image: conferenceroom:latest
    container_name: confroom
    volumes:
      # mount confroom docroot + code
      - ./confroom/index.php:/conference/index.php:ro
      - ./confroom/img:/conference/img:ro
      - ./confroom/lib:/conference/lib:ro
      - ./confroom/vendor:/conference/vendor:ro
      # mount config
      - ./confroom/docker/conf.php:/conference/conf.php:ro
      # mount nginx config
      - ./confroom/docker/nginx-site.conf:/etc/nginx/sites-enabled/default.conf:ro
    ports:
      - "4010:80"      # confroom url: http://localhost:4010
    environment:
      TINE20_USER: test
      TINE20_PASSWD: test
      TINE20_URL: http://web:80
      TINE20_CALENDAR_ID: f9d3f277db4862986ceb1982f629e97c8c203832
      LOGFILE: /conference/logs/weekly.log

  cache:
    image: redis:latest
    container_name: cache

  web:
    image: tine20:latest
    # if you don't want webpack to run, you need to comment out the lines below "# add startup config for webpack"
    #  in the Dockerfile and build a tine20-cli image with this command: "docker build . -t tine20-cli"
    #image: tine20-cli:latest
    container_name: tine20
    volumes:
      # tine20 source!!!! Mount it under /tine/tine20
      - ./tine20/tine20:/tine/tine20/:ro

      # tine20 file storage!!!! Mount it under /tine/files/
      - tine20_files:/tine/files/

      # mount nginx config
      - ./configs/nginx/nginx-site.conf:/etc/nginx/sites-enabled/default.conf:ro

      # mount customers config
      - ./configs/customers/:/tine/customers:ro

      # tine20 tests!!!! Mount it under /tine/tests
      - ./tine20/tests/:/tine/tests/:ro

      # tine20 scripts Mount it under /tine/scripts
      - ./tine20/scripts:/tine/scripts/:ro

    ports:
      - "4000:80"      # tine
      - "4001:10443"   # webpack
      - "4025:25"      # smtp
      - "4143:143"     # imap2 (LOGIN DISABLED!!!!!)
      - "4993:993"     # imaps
    environment:
      TINE20_DBHOST: db
      TINE20_DBNAME: *mysqldb
      TINE20_DBUSER: *mysqluser
      TINE20_DBPASSWD: *mysqlpw
      TINE20_SETUPUSER: tine20setup
      TINE20_SETUPPASSWD: tine20setup
      TINE20_ADMINUSER: tine20admin
      TINE20_ADMINPASSWD: tine20admin
      TINE20_REDISHOST: cache
      # needed by PHPSTORM for debugging
      PHP_IDE_CONFIG: "serverName=tine20docker"
      # this can be used to overwrite some xdebug config settings
      #XDEBUG_CONFIG: "remote_host=172.18.0.1 remote_enable=on remote_port=9000" #remote_enable=off

networks:
    default:
      driver: bridge

volumes:
  # DB storage
  mariadb_data:

  # Volume for tine20 file storage
  tine20_files:
